% rebase('layout.tpl', title='Home Page', year=year)
<h2>
    Остовное дерево
</h2>
<h3>
    <a href="https://ru.wikipedia.org/wiki/Остовное_дерево">О́стовное де́рево графа</a> (англ. Spanning tree) — это
    дерево, подграф данного графа, с тем же числом вершин, что и у исходного графа.
    Неформально говоря, остовное дерево получается из исходного графа удалением максимального числа рёбер, входящих в
    циклы, но без нарушения связности графа. Остовное дерево включает в себя все n вершин исходного графа и содержит n-1
    ребро.
</h3>
<h2>
    Алгоритмы поиска
</h2>
<h3>
    <a href="/bfs">Поиск в ширину </a>(англ. breadth-first search, BFS) — один из методов обхода графа. Пусть задан граф
    G=(V,E) и выделена исходная вершина s. Алгоритм поиска в ширину систематически обходит все ребра G для «открытия»
    всех вершин, достижимых из s, вычисляя при этом расстояние (минимальное количество рёбер) от s до каждой достижимой
    из s вершины. Алгоритм работает как для ориентированных, так и для неориентированных графов.
    <br>
    <img src="../static/images/Breadth-First-Search-Algorithm.gif" alt="Breadth First Search Algorithm" width="500"/>
    <br>
    <br>
    <a href="/bfs">Поиск в глубину</a>(англ.Depth-first search, DFS) — один из методов обхода графа. Стратегия поиска в
    глубину, как и следует из названия, состоит в том, чтобы идти «вглубь» графа, насколько это возможно. Алгоритм
    поиска описывается рекурсивно: перебираем все исходящие из рассматриваемой вершины рёбра. Если ребро ведёт в
    вершину, которая не была рассмотрена ранее, то запускаем алгоритм от этой нерассмотренной вершины, а после
    возвращаемся и продолжаем перебирать рёбра. Возврат происходит в том случае, если в рассматриваемой вершине не
    осталось рёбер, которые ведут в нерассмотренную вершину. Если после завершения алгоритма не все вершины были
    рассмотрены, то необходимо запустить алгоритм от одной из нерассмотренных вершин.
    <br>
    <img src="../static/images/Depth-First-Search.gif" alt="Depth First Search algorithm" width="500"/>
    <br>
    <br>
    <a href="/kruskal">Алгоритм Краскала</a> — эффективный алгоритм построения минимального остовного дерева
    взвешенного связного неориентированного графа. Также алгоритм используется для нахождения некоторых приближений для
    задачи Штейнера.
    <br>
    <img src="../static/images/KruskalDemo.gif" alt="Kruskal's algorithm" width="500"/>
</h3>
